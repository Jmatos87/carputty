[{"C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\index.js":"1","C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\reportWebVitals.js":"2","C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\container\\card\\index.js":"3","C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\components\\ProgressBar\\index.js":"4","C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\components\\CardBody\\index.js":"5"},{"size":491,"mtime":1607787177892,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2168,"mtime":1607803607943,"results":"9","hashOfConfig":"7"},{"size":512,"mtime":1607802998240,"results":"10","hashOfConfig":"7"},{"size":1773,"mtime":1607803258911,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xh0wfj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\index.js",[],["25","26"],"C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\reportWebVitals.js",[],"C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\container\\card\\index.js",["27"],"C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\components\\ProgressBar\\index.js",["28"],"import React, { useState } from 'react';\r\nimport './styles.scss'\r\n\r\nfunction ProgressBar(props) {\r\n    const { percent } = props\r\n    const completeProgress = '8px 8px 0px 0px'\r\n    const partialProgress = '8px 0px 0px 0px'\r\n\r\n    return (\r\n        <div className='progressBar'>\r\n            <div className='progressFill' \r\n                style={{width: percent, borderRadius: percent === '100%' ? completeProgress : partialProgress }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\Josh\\Desktop\\projects\\carputty\\src\\components\\CardBody\\index.js",["29","30","31"],"import React, { useState } from 'react';\r\nimport './styles.scss'\r\n\r\nfunction CardBody(props) {\r\n    const { goalReached, remainingFunds, totalDonors, userDonation,setDonatioError, setUserDonation, donationLogic, donationError } = props\r\n    const completeProgress = '8px 8px 0px 0px'\r\n    const partialProgress = '8px 0px 0px 0px'\r\n\r\n    return (\r\n        <div className='cardBody'>\r\n            <div className='fundContainer'>\r\n                {goalReached ? (\r\n                    <p>We did it! We passed our goal by <b><sup>$</sup>{remainingFunds}</b>!!!</p>\r\n\r\n                ) : (\r\n                    <p><b><sup>$</sup>{remainingFunds}</b> still needed to fund this project</p>\r\n                )}\r\n                <div className='arrow-down'></div>\r\n            </div>\r\n            <div className='infoContainer'>\r\n                <h2>Only four days left to fund this project</h2>\r\n                <p>Join the <b>{totalDonors}</b> other donors who have already supported this project.</p>\r\n            </div>\r\n            <div className='inputContainer'>\r\n                <span className='dollar'>$</span>\r\n                <input type='number' \r\n                value={userDonation}\r\n                onChange={(evt)=>{\r\n                    const userInput = evt.target.value;\r\n                    setDonatioError(false)\r\n                    setUserDonation(userInput)\r\n                }}/>\r\n                <button disabled={userDonation === ''} onClick={()=>donationLogic(userDonation)}>Give Now</button>\r\n            </div>\r\n            {donationError && (\r\n                <div className='errorContainer'>\r\n                    <p>Minimum donation is $5. Pay up!</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardBody;\r\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":61,"column":21,"nodeType":"38","endLine":61,"endColumn":47},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":25},{"ruleId":"39","severity":1,"message":"43","line":6,"column":11,"nodeType":"41","messageId":"42","endLine":6,"endColumn":27},{"ruleId":"39","severity":1,"message":"44","line":7,"column":11,"nodeType":"41","messageId":"42","endLine":7,"endColumn":26},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'completeProgress' is assigned a value but never used.","'partialProgress' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]