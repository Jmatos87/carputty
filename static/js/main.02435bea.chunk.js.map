{"version":3,"sources":["components/ProgressBar/index.js","components/CardBody/index.js","assets/images/500.gif","container/card/index.js","reportWebVitals.js","index.js"],"names":["ProgressBar","props","percent","className","style","width","borderRadius","CardBody","goalReached","remainingFunds","totalDonors","userDonation","setDonatioError","setUserDonation","donationLogic","donationError","type","value","onChange","evt","userInput","target","disabled","onClick","App","useState","bubbleBoy","setBubbleBoy","addDonor","totalDonation","addToTotalDontation","donation","formattedOutput","formattedPercentage","fundsToGoal","cardBodyProps","formattedDonation","parseInt","setTimeout","src","bubbleBoyGif","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAiBeA,MAdf,SAAqBC,GAAQ,IACjBC,EAAYD,EAAZC,QAIR,OACI,qBAAKC,UAAU,cAAf,SACI,qBAAKA,UAAU,eACXC,MAAO,CAACC,MAAOH,EAASI,aAA0B,SAAZJ,EANzB,kBACD,wB,MCqCbK,MAxCf,SAAkBN,GAAQ,IACdO,EAA0HP,EAA1HO,YAAaC,EAA6GR,EAA7GQ,eAAgBC,EAA6FT,EAA7FS,YAAaC,EAAgFV,EAAhFU,aAAaC,EAAmEX,EAAnEW,gBAAiBC,EAAkDZ,EAAlDY,gBAAiBC,EAAiCb,EAAjCa,cAAeC,EAAkBd,EAAlBc,cAIhH,OACI,sBAAKZ,UAAU,WAAf,UACI,sBAAKA,UAAU,gBAAf,UACKK,EACG,kEAAoC,8BAAG,oCAAaC,KAApD,SAGA,8BAAG,8BAAG,oCAAaA,KAAnB,wCAEJ,qBAAKN,UAAU,kBAEnB,sBAAKA,UAAU,gBAAf,UACI,0EACA,0CAAY,4BAAIO,IAAhB,+DAEJ,sBAAKP,UAAU,iBAAf,UACI,sBAAMA,UAAU,SAAhB,eACA,uBAAOa,KAAK,SACZC,MAAON,EACPO,SAAU,SAACC,GACP,IAAMC,EAAYD,EAAIE,OAAOJ,MAC7BL,GAAgB,GAChBC,EAAgBO,MAEpB,wBAAQE,SAA2B,KAAjBX,EAAqBY,QAAS,kBAAIT,EAAcH,IAAlE,yBAEHI,GACG,qBAAKZ,UAAU,iBAAf,SACI,sECpCL,MAA0B,gC,MCmE1BqB,MAjDf,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACJC,EADI,KACOC,EADP,OAEqBF,mBAAS,GAF9B,mBAEJf,EAFI,KAESkB,EAFT,OAG6BH,mBAAS,IAHtC,mBAGJd,EAHI,KAGUE,EAHV,OAIkCY,mBAAS,GAJ3C,mBAIJI,EAJI,KAIWC,EAJX,OAK8BL,oBAAS,GALvC,mBAKJV,EALI,KAKWH,EALX,KASLV,EAnBkB,SAAA6B,GACxB,IAAMC,EAAoBD,EAHV,IAGiC,IACjD,OAAOC,EAAkB,IAAM,OAASA,EAAkB,IAiB1CC,CAAoBJ,GAChCpB,EAfY,SAAAoB,GAEhB,OADa,IAAOA,EAcCK,CAAYL,GAC7BrB,GAAc,EACfC,EAAiB,IAChBA,IAAmC,EACnCD,GAAc,GAGlB,IAeM2B,EAAgB,CAAC3B,cAAaC,iBAAgBC,cAAaC,eAAaC,kBAAiBC,kBAAiBC,cAf1F,SAACH,GACnB,IAAMyB,EAAoBC,SAAS1B,GACV,MAAtByB,IACCT,GAAa,GACbW,YAAW,kBAAKX,GAAa,KAAO,MAErCS,EAAoB,EAEnBxB,GAAgB,IAEhBgB,EAASlB,EAAY,GACrBoB,EAAoBD,EAAgBQ,SAASD,MAI0ErB,iBAE/H,OACI,sBAAKZ,UAAU,UAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAAC,EAAD,CAAaD,QAASA,IACtB,cAAC,EAAD,eAAciC,OAEjBT,GACG,qBAAKvB,UAAU,eAAf,SACI,qBAAKoC,IAAKC,UChDfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.02435bea.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './styles.scss'\r\n\r\nfunction ProgressBar(props) {\r\n    const { percent } = props\r\n    const completeProgress = '8px 8px 0px 0px'\r\n    const partialProgress = '8px 0px 0px 0px'\r\n\r\n    return (\r\n        <div className='progressBar'>\r\n            <div className='progressFill' \r\n                style={{width: percent, borderRadius: percent === '100%' ? completeProgress : partialProgress }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from 'react';\r\nimport './styles.scss'\r\n\r\nfunction CardBody(props) {\r\n    const { goalReached, remainingFunds, totalDonors, userDonation,setDonatioError, setUserDonation, donationLogic, donationError } = props\r\n    const completeProgress = '8px 8px 0px 0px'\r\n    const partialProgress = '8px 0px 0px 0px'\r\n\r\n    return (\r\n        <div className='cardBody'>\r\n            <div className='fundContainer'>\r\n                {goalReached ? (\r\n                    <p>We did it! We passed our goal by <b><sup>$</sup>{remainingFunds}</b>!!!</p>\r\n\r\n                ) : (\r\n                    <p><b><sup>$</sup>{remainingFunds}</b> still needed to fund this project</p>\r\n                )}\r\n                <div className='arrow-down'></div>\r\n            </div>\r\n            <div className='infoContainer'>\r\n                <h2>Only four days left to fund this project</h2>\r\n                <p>Join the <b>{totalDonors}</b> other donors who have already supported this project.</p>\r\n            </div>\r\n            <div className='inputContainer'>\r\n                <span className='dollar'>$</span>\r\n                <input type='number' \r\n                value={userDonation}\r\n                onChange={(evt)=>{\r\n                    const userInput = evt.target.value;\r\n                    setDonatioError(false)\r\n                    setUserDonation(userInput)\r\n                }}/>\r\n                <button disabled={userDonation === ''} onClick={()=>donationLogic(userDonation)}>Give Now</button>\r\n            </div>\r\n            {donationError && (\r\n                <div className='errorContainer'>\r\n                    <p>Minimum donation is $5. Pay up!</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardBody;\r\n","export default __webpack_public_path__ + \"static/media/500.d4e80e97.gif\";","import React, { useState } from 'react';\r\nimport ProgressBar from '../../components/ProgressBar'\r\nimport CardBody from '../../components/CardBody'\r\n\r\nimport bubbleBoyGif from '../../assets/images/500.gif'\r\nimport './styles.scss'\r\nconst fundingGoal = 5000;\r\n\r\nconst formattedPercentage = donation => {\r\n    const formattedOutput =  (donation/fundingGoal * 100)\r\n    return formattedOutput > 100 ? '100%' : formattedOutput + '%'\r\n}\r\n\r\nconst fundsToGoal = totalDonation => {\r\n    const diff = 5000 - totalDonation\r\n    return diff\r\n}\r\n\r\nfunction App() {\r\n    const [bubbleBoy, setBubbleBoy] = useState(false)\r\n    const [totalDonors, addDonor] = useState(0)\r\n    const [userDonation, setUserDonation] = useState('')\r\n    const [totalDonation, addToTotalDontation] = useState(0)\r\n    const [donationError, setDonatioError] = useState(false)\r\n\r\n\r\n    \r\n    const percent = formattedPercentage(totalDonation)\r\n    let remainingFunds = fundsToGoal(totalDonation)\r\n    let goalReached = false;\r\n    if(remainingFunds < 0){\r\n        remainingFunds = remainingFunds * -1\r\n        goalReached = true;\r\n    }\r\n\r\n    const donationLogic = (userDonation) => {\r\n        const formattedDonation = parseInt(userDonation)\r\n        if(formattedDonation === 500){\r\n            setBubbleBoy(true)\r\n            setTimeout(()=> setBubbleBoy(false),5000)\r\n        }\r\n        if(formattedDonation < 5){\r\n            //logic for user error\r\n            setDonatioError(true)\r\n        }else{\r\n            addDonor(totalDonors+1)\r\n            addToTotalDontation(totalDonation + parseInt(formattedDonation))\r\n        }\r\n    }\r\n\r\n    const cardBodyProps = {goalReached, remainingFunds, totalDonors, userDonation,setDonatioError, setUserDonation, donationLogic, donationError}\r\n\r\n    return (\r\n        <div className='sandbox'>\r\n            <div className='card'>\r\n                <ProgressBar percent={percent}/>\r\n                <CardBody {...cardBodyProps}/>\r\n            </div>\r\n            {bubbleBoy && (\r\n                <div className='gifContainer'>\r\n                    <img src={bubbleBoyGif} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Card from './container/card';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Card />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}